<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security-4.1.xsd
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util-4.1.xsd">




	<http pattern="/resources" security="none" />
	<http pattern="/WEB-INF" security="none" />
	<http pattern="/resources/" security="none" />
	<http pattern="/WEB-INF/" security="none" />
	<http auto-config="true"  use-expressions="true">
		
		<!-- View Authorize -->
		<intercept-url pattern="/admin/view" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/admin/view/listTrip" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/admin/view/listTripSd" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/admin/view/listUsers" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/admin/view/listTaxi" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/users/all" access="hasRole('ROLE_ADMIN')"/>
		

        <intercept-url pattern="/user/view/password" access="hasRole('ROLE_USER')"/>
        <intercept-url pattern="/user/view/avatar" access="hasRole('ROLE_USER')"/>
        <intercept-url pattern="/user/view/data" access="hasRole('ROLE_USER')"/>
        <intercept-url pattern="/user/userTraveler" access="hasRole('ROLE_USER')"/>
        <intercept-url pattern="/user/get/avatar" access="hasRole('ROLE_USER')"/>
        <intercept-url pattern="/user/delete/avatar" access="hasRole('ROLE_USER')"/>
       
        
		
		<intercept-url pattern="/user/view" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/tripDetails" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/tripAdd" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/trip/get" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/tripSd/add" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/tripsd/all" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/tripsd/alluser" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/notification/get" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/user/userTraveler" access="hasRole('ROLE_USER')"/>
		
		
		<!-- REST Authorize -->
		<intercept-url pattern="/trip/addUser" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/tripSd/remove/*" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/tripsd/alluser" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/tripSd/update" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/tripSd/addTrip" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/tripSd/addTrip" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/trip/all" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/trip/addUser" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/trip/removeUser/*" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/trip/details/*" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/trip/alluser" access="hasRole('ROLE_USER')"/> 
		<intercept-url pattern="/trip/userTravels" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/trip/isUserTraveler/*" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/trip/travelers/*" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/trip/remove/*" access="hasRole('ROLE_USER')"/>
		
		<intercept-url pattern="/chat/get/*" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/message/add" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/message/update" access="hasRole('ROLE_USER')"/>
		
		<intercept-url pattern="/notification/confirmNotification/*" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/notification/remove" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/reservation/isConfirmed/*" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/reservation/add/*" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/reservation/isUserConfirmed/*" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/reservation/confirm/*" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/reservation/remove/*" access="hasRole('ROLE_USER')"/>
		
		
		<intercept-url pattern="/taxi/get/" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/taxi/get/all" access="hasRole('ROLE_USER')"/>
		
		
		<intercept-url pattern="/users/*" access="hasRole('ROLE_ADMIN')"/>
	
		
		
		
		
		<form-login login-page="/login" 
		    username-parameter="j_username" 
		    password-parameter="j_password"
		    always-use-default-target="true"
			authentication-failure-url="/login/failure" 
			login-processing-url="/j_spring_security_check" 
			default-target-url="/#/"/>
		
		<access-denied-handler error-page="/denied"/>
		
		<logout invalidate-session="true" 
			logout-success-url="/#/" 
			logout-url="/logout"
			delete-cookies="JSESSIONID" />
			
			 
		<remember-me
		     key="uniqueAndSecret"
		     remember-me-cookie="remember-me"
		     token-validity-seconds="1209600"
             remember-me-parameter="remember-me"
             data-source-ref="dataSource" />
			
			<csrf disabled="true"/>
	</http>
	
	
	 <beans:bean id="bcryptEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

     <beans:bean id="rememberMeAuthenticationProvider" class=
       "org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices">
       <beans:constructor-arg value="myAppKey" />
       <beans:constructor-arg ref="jdbcTokenRepository" />
       <beans:constructor-arg ref="customUserDetailsService" />
     </beans:bean>
  

     <!-- Uses a database table to maintain a set of persistent login data -->
     <beans:bean id="jdbcTokenRepository"
         class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl"> 
        <beans:property name="createTableOnStartup" value="false" /> 
        <beans:property name="dataSource" ref="dataSource" /> 
     </beans:bean>
	
	
	<authentication-manager>
	        <authentication-provider user-service-ref="customUserDetailsService">
	        		 <password-encoder ref="bcryptEncoder"/>
	        </authentication-provider>
	</authentication-manager>
	<global-method-security secured-annotations="enabled" />
	
</beans:beans>